{"version":3,"sources":["webpack:///./src/templates/project.js"],"names":["Template","markdownRemark","data","frontmatter","html","timeToRead","path","width","title","className","date","github","href","size","tags","map","tag","key","dangerouslySetInnerHTML","__html","pageQuery"],"mappings":"2FAAA,kKAkBe,SAASA,EAAT,GAA4B,IAC/BC,EAD8B,EAARC,KACtBD,eACAE,EAAkCF,EAAlCE,YAAaC,EAAqBH,EAArBG,KAAMC,EAAeJ,EAAfI,WAC3B,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAYC,KAAMH,EAAYG,OAC9B,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQC,MAAM,QACV,4BAAKJ,EAAYK,OACjB,uBAAGC,UAAU,kBAAkBN,EAAYO,KAA3C,IAAkDL,EAAlD,MAEJ,kBAAC,IAAD,CAAQE,MAAM,SACA,OAAvBJ,EAAYQ,OAAmB,uBAAGC,KAAMT,EAAYQ,QAAQ,kBAAC,IAAD,CAAUE,KAAK,UAAe,8BACrE,OAArBV,EAAYW,KAAiB,wBAAIL,UAAU,QAAQN,EAAYW,KAAKC,KAAI,SAACC,GACxE,OAAQ,wBAAIP,UAAU,MAAMQ,IAAKD,GAAMA,OAChC,+BAGH,yBAAKE,wBAAyB,CAACC,OAAQf,MAI5C,IAAMgB,EAAS","file":"component---src-templates-project-js-54d6f2dcab6663ab0dd6.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport { FaGithub } from 'react-icons/fa';\n// import rehypeReact from \"rehype-react\"\n\nimport Layout from \"../layouts/index\"\nimport { Breadcrumb } from \"../components/typeogrophy\"\nimport { Row, Column} from \"../components/grid\"\n// import { Plotly, LazyPlot } from \"../components/plotly\"\n\n// const renderAst = new rehypeReact({\n  // createElement: React.createElement,\n  // components: {\n    // \"lazyplot\": LazyPlot,\n    // \"plotly\": Plotly,\n  // }\n// }).Compiler;\n\nexport default function Template({data,}) {\n    const { markdownRemark } = data\n    const { frontmatter, html, timeToRead } = markdownRemark\n    return (\n        <Layout>\n            <Breadcrumb path={frontmatter.path}/>\n            <Row>\n                <Column width=\"nine\">\n                    <h1>{frontmatter.title}</h1>\n                    <p className=\"page-subheader\">{frontmatter.date} {timeToRead}m</p>\n                </Column>\n                <Column width=\"three\">\n    { (frontmatter.github !== null) ? <a href={frontmatter.github}><FaGithub size=\"3rem\"/></a> : <div></div> }\n    { (frontmatter.tags !== null) ? <ul className=\"tags\">{frontmatter.tags.map((tag) => {\n        return (<li className=\"tag\" key={tag}>{tag}</li>)\n    })}</ul> : <ul></ul>}\n                </Column>\n            </Row>\n            <div dangerouslySetInnerHTML={{__html: html}} />\n        </Layout>\n    )\n}\nexport const pageQuery = graphql`\n    query($path: String!) {\n        markdownRemark(frontmatter: {path: {eq: $path}}) {\n            html\n            timeToRead\n            frontmatter {\n                date(formatString: \"MMMM DD, YYYY\")\n                path\n                title\n                tags\n                github\n            }\n        }\n    }\n`\n"],"sourceRoot":""}